name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Set these variables at either the step or workflow level
env:
  GitHubPackageFeedUrl: https://nuget.pkg.github.com/team4sloth/index.json
  LogicProjectPath: ${{ github.WORKSPACE }}/AnimalAdoption.Common.Logic
  NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically creates a GITHUB_TOKEN secret to use in your workflow
  AZURE_WEBAPP_NAME: sloth-test # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DEPLOY_LOCATION : southeastasia
  PROD_APP_SERVICE_PLAN_NAME : sloth-prod
  PROD_KEY_VAULT_NAME : sloth-prod-key
  PROD_WEB_APP_NAME : sloth-prod-webapp


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
        source-url: ${{ env.GitHubPackageFeedUrl }}
       
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release   
      
    - name: Publish      
      run: dotnet publish ${{github.workspace}}/AnimalAdoption.Web.Portal/AnimalAdoption.Web.Portal.csproj --configuration Release --output ./slothwebapp/ --no-build

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        # Artifact name
        name: animal-adoption-portal-artifact # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ./slothwebapp/


    - name: Upload prod-deploy.json as Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        # Artifact name
        name: prod-deploy-json-artifact # optional, default is artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ./prod-deploy.json

    - name: List the PWD
      run: ls -r  ${{ github.WORKSPACE }}

    - name: Package up project
      run: dotnet pack --configuration Release ${{ env.LogicProjectPath }}

    - name: Push package to GitHub registry
      run: dotnet nuget push ${{ env.LogicProjectPath }}/**/*.nupkg --skip-duplicate
      
  deploy:
    name: Deploy to Test Env
    needs: build
    
    runs-on: ubuntu-latest
    
    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        # Artifact name
        name: animal-adoption-portal-artifact
        path:  ${{ github.WORKSPACE }}/slothwebapp
    - name: List the PWD
      run: ls -r  ${{ github.WORKSPACE }}/slothwebapp
      
    - name: 'Run Azure webapp deploy action using publish profile credentials'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
        publish-profile: ${{ secrets.SLOTH_DEV_PROFILE }} # Define secret variable in repository settings as per action documentation
        package: ${{ github.WORKSPACE }}/slothwebapp

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.SLOTH_AZURE_PROFILE }}
    
    - name: Azure key vault - Get Secrets
      uses: Azure/get-keyvault-secrets@v1.1
      with:
        # Name of the azure key vault
        keyvault: sloth-test-key
        # Name of the secret to be fetched
        secrets: 'GlobalPassword'
      id: azure-secret-key
    
    - name: Azure App Service Settings
      uses: Azure/appservice-settings@v1
      with:
        # Name of the Azure Web App
        app-name: ${{ env.AZURE_WEBAPP_NAME }} 
        mask-inputs: false

        # Application settings using the JSON syntax set as value of secret variable: APP_SETTINGS
        app-settings-json: '[{ "name": "GlobalPassword", "value" : "${{ steps.azure-secret-key.outputs.GlobalPassword }}", "slotSetting": false  }]'
        #app-settings-json: '[{ "name": "GlobalPassword", "value" : "${{ secrets.SLOTH_DEV_GLOBAL_PASSWORD }}", "slotSetting": false  }]'
        #app-settings-json: '[{ "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "1", "slotSetting": false }]'
    - run: |
        az logout       

  deploy_prod:
    name: Deploy to Prod Env
    needs: deploy
    
    runs-on: ubuntu-latest
    
    steps:
        
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.SLOTH_AZURE_PROFILE_PROD }}
    
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        # Artifact name
        name: animal-adoption-portal-artifact
        path:  ${{ github.WORKSPACE }}/slothwebapp

    - name: Download prod-deploy.json Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        # Artifact name
        name: prod-deploy-json-artifact
        path:  ${{ github.WORKSPACE }}
    

    - name: Deploy Azure Resource Manager (ARM) Template
      uses: Azure/arm-deploy@v1.0.2
      with:
        # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
        scope: resourcegroup
        # Override the Subscription Id set by Azure Login.
        subscriptionId: cfe96ac1-4cd0-40ad-9751-b18802bf8822 
        # Provide the name of a resource group, only required for resource Group deployments.
        resourceGroupName: DevOps-2021-03-18-team-04-prod
        # Specify the path or URL to the Azure Resource Manager template.
        template: ${{ github.WORKSPACE }}/prod-deploy.json
        parameters:
            resourceLocation=${{ env.DEPLOY_LOCATION }}
            tenantGuid=${{ secrets.AG_TENANT_GUID }}
            appServicePlanName=${{ env.PROD_APP_SERVICE_PLAN_NAME }}
            keyVaultName=${{ env.PROD_KEY_VAULT_NAME }}
            webAppName=${{ env.PROD_WEB_APP_NAME }}
            resourceGroupServicePrincipalManagedApplicationObjectId=${{ secrets.RG_SP_MA_OBJECT_ID }}

    - run: |
        az logout   
